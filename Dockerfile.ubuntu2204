FROM ubuntu:22.04

ARG USER=shank
ARG PASSWD=pass
ARG UID=1000
ARG GID=1000

ENV USER ${USER}
ENV HOME /home/${USER}

# to fix tzdata hanging up the build process
ENV DEBIAN_FRONTEND=noninteractive

# better colors
ENV TERM xterm-256color

# update, upgrade
RUN apt-get update && apt-get upgrade -y && apt-get autoremove -y

# locales
# source: https://serverfault.com/a/801162
ENV LANG=en_US.UTF-8
RUN apt-get install -y locales \
  && sed -i -e "s/# $LANG.*/$LANG UTF-8/" /etc/locale.gen \
  && dpkg-reconfigure --frontend=noninteractive locales \
  && update-locale LANG=$LANG

# timezone
RUN apt-get install -yq tzdata \
  && mv /etc/localtime /etc/localtime.bak \
  && ln -s /usr/share/zoneinfo/America/Indianapolis /etc/localtime \
  && dpkg-reconfigure --frontend=noninteractive tzdata
ENV TZ "America/Indianapolis"

# apt-utils will be useful
RUN apt-get install -y apt-utils \
  && apt-get autoremove -y

# install sudo
RUN apt-get install -y sudo \
  && apt-get autoremove -y

# unminimize since this is a dev container
RUN yes | unminimize

# install newer nodejs
ENV NODE_MAJOR 20
RUN apt-get install -y gpg curl \
  && mkdir -p /etc/apt/keyrings \
  && curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg \
  && echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_${NODE_MAJOR}.x nodistro main" > /etc/apt/sources.list.d/nodesource.list \
  && apt-get update -y \
  && apt-get install -y nodejs \
  && apt-get autoremove -y

# dev packages
RUN apt-get install -y \
    apt-file \
    autoconf \
    bat \
    bfs \
    black \
    clang \
    clang-format \
    cmake \
    curl \
    exa \
    fd-find \
    file \
    g++ \
    gcc \
    gdb \
    gdu \
    gettext \
    git \
    htop \
    libssl-dev \
    lld \
    make \
    neofetch \
    ninja-build \
    openssl \
    patchelf \
    pipx \
    pkg-config \
    plocate \
    python-is-python3 \
    python3 \
    python3-pip \
    python3-venv \
    ripgrep \
    software-properties-common \
    stow \
    tmux \
    tree \
    unzip \
    universal-ctags \
    wget \
    xclip \
    xsel \
    zip \
  && apt-get autoremove -y

# bat -> batcat
RUN ln -s /usr/bin/batcat /usr/bin/bat

# fd -> fdfind
RUN ln -s /usr/bin/fdfind /usr/bin/fd

# fish shell
RUN add-apt-repository ppa:fish-shell/release-3 && \
    apt-get update && \
    apt-get install -y fish && \
    apt-get autoremove -y

# helix
RUN add-apt-repository ppa:maveonair/helix-editor \
  && apt-get update \
  && apt-get install -y helix

# create user
RUN useradd --create-home ${USER} --uid ${UID} --shell /usr/bin/bash && \
    echo "${USER}:${PASSWD}" | chpasswd && \
    echo "${USER} ALL=(ALL) ALL" >> /etc/sudoers
RUN echo "${USER}:${PASSWD}" | chpasswd
RUN chown -R ${USER} /home/${USER}

# change users default shell
RUN chsh ${USER} --shell /usr/bin/fish

# change to $USER directory
WORKDIR /home/${USER}
USER ${USER}

# dotfiles
RUN git clone https://gitlab.com/shank/dotfiles.git \
  && cd dotfiles \
  && git remote set-url origin git@gitlab.com:shank/dotfiles.git

# # nvchad
# RUN rm -rf ~/.config/nvim \
#   && git clone https://github.com/NvChad/NvChad ~/.config/nvim-nvchad --depth 1

# fzf
RUN mkdir -p /home/${USER}/.config/fish/conf.d
RUN git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf && \
    /home/${USER}/.fzf/install --all

# rust
# https://github.com/rust-lang/rustup/issues/297#issuecomment-444818896
RUN /usr/bin/bash -c 'curl https://sh.rustup.rs -sSf | sh -s -- -y'
# RUN mkdir ~/.cargo-target

# install rust (using rustup)
RUN /usr/bin/bash --login -c 'rustup install nightly stable'
RUN /usr/bin/bash --login -c 'rustup default nightly'

# cargo utils
RUN /usr/bin/fish --login -c 'cargo install stylua sd tealdeer procs cargo-cache tokei difftastic'

# stow packages
RUN cd dotfiles \
    && rm --force ${HOME}/.config/fish/functions/fish_user_key_bindings.fish \
    && stow --verbose --no-folding fish neovim tmux bins git lf helix gdb

# tmux plugin manager
RUN git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm

# fish prompt
USER root
RUN /home/${USER}/.cargo/bin/sd -s "'>'" "' |'" /usr/share/fish/functions/fish_prompt.fish
RUN /home/${USER}/.cargo/bin/sd -s "'#'" "' #'" /usr/share/fish/functions/fish_prompt.fish
USER ${USER}

# asdf-vm
# RUN git clone https://github.com/asdf-vm/asdf.git $HOME/.asdf --branch v0.10.2

# nix installation
USER root
RUN mkdir /nix && chown ${USER} /nix
USER ${USER}
RUN curl -L https://nixos.org/nix/install | sh

# change the shell for the rest of the commands commands
SHELL ["/usr/bin/fish", "--login", "-c"]

# nix packages
RUN nix-env -iA \
	nixpkgs.neovim \
	nixpkgs.lazygit \
	nixpkgs.lf \
	nixpkgs.just

# my utils (utils-rs)
RUN git clone https://gitlab.com/shank/utils-rs.git \
  && cd utils-rs \
  && /usr/bin/bash --login -c 'just install' \
  && cd .. \
  && rm -r utils-rs

# fisher (fish shell)
RUN curl -sL https://git.io/fisher | source && fisher install jorgebucaran/fisher
RUN fisher install patrickf1/fzf.fish jethrokuan/z

# python packages
RUN pip install bpython
