FROM ubuntu:20.04

ARG USER=shank
ARG PASSWD=pass
ARG UID=1000
ARG GID=1000

ENV USER ${USER}
ENV HOME /home/${USER}

# to fix tzdata hanging up the build process
ENV DEBIAN_FRONTEND=noninteractive

# better colors
ENV TERM xterm-256color

# update, upgrade
RUN apt-get update && apt-get upgrade -y && apt-get autoremove -y

# locales
# source: https://serverfault.com/a/801162
ENV LANG=en_US.UTF-8
RUN apt-get install -y locales \
  && sed -i -e "s/# $LANG.*/$LANG UTF-8/" /etc/locale.gen \
  && dpkg-reconfigure --frontend=noninteractive locales \
  && update-locale LANG=$LANG

# apt-utils will be useful
RUN apt-get install -y apt-utils \
  && apt-get autoremove -y

# install sudo
RUN apt-get install -y sudo \
  && apt-get autoremove -y

# unminimize since this is a dev container
RUN yes | unminimize

# dev packages
RUN apt-get install -y \
    apt-file \
    autoconf \
    bat \
    bfs \
    black \
    clang \
    clang-format \
    cmake \
    curl \
    file \
    g++ \
    gcc \
    gettext \
    git \
    htop \
    lld \
    make \
    neofetch \
    ninja-build \
    nodejs \
    npm \
    python-is-python3 \
    python3 \
    python3-pip \
    python3-venv \
    ripgrep \
    software-properties-common \
    stow \
    tmux \
    tree \
    tzdata \
    unzip \
    universal-ctags \
    wget \
    xclip \
    xsel \
    zip \
  && apt-get autoremove -y

# bat -> batcat
RUN ln -s /usr/bin/batcat /usr/bin/bat

# fd -> fdfind
RUN ln -s /usr/bin/fdfind /usr/bin/fd

# fish shell
RUN add-apt-repository ppa:fish-shell/release-3 && \
    apt-get update && \
    apt-get install -y fish && \
    apt-get autoremove -y

# crate user
RUN useradd --create-home ${USER} --uid ${UID} --shell /usr/bin/bash && \
    echo "${USER}:${PASSWD}" | chpasswd && \
    echo "${USER} ALL=(ALL) ALL" >> /etc/sudoers
RUN echo "${USER}:${PASSWD}" | chpasswd
RUN chown -R ${USER} /home/${USER}

# change users default shell
RUN chsh ${USER} --shell /usr/bin/fish

# change to $USER directory
WORKDIR /home/${USER}
USER ${USER}

# nvchad
RUN rm -rf ~/.config/nvim \
  && git clone https://github.com/NvChad/NvChad ~/.config/nvim --depth 1

# fzf
RUN git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf && \
    /home/${USER}/.fzf/install --all

# rust
# https://github.com/rust-lang/rustup/issues/297#issuecomment-444818896
RUN /usr/bin/bash -c 'curl https://sh.rustup.rs -sSf | sh -s -- -y'
RUN mkdir ~/.cargo-target

# cargo utils
RUN /usr/bin/bash --login -c 'cargo install stylua sd exa'

# dotfiles
RUN git clone https://gitlab.com/shank/dotfiles.git 

# stow packages
RUN cd dotfiles \
    && rm --force ${HOME}/.config/fish/functions/fish_user_key_bindings.fish \
    && stow --verbose --no-folding fish neovim tmux bins git

# tmux plugin manager
RUN git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm

# asdf-vm
# RUN git clone https://github.com/asdf-vm/asdf.git $HOME/.asdf --branch v0.10.2

# fish prompt
USER root
RUN /home/${USER}/.cargo/bin/sd -s "'>'" "' |'" /usr/share/fish/functions/fish_prompt.fish
RUN /home/${USER}/.cargo/bin/sd -s "'#'" "' #'" /usr/share/fish/functions/fish_prompt.fish
USER ${USER}

# change the shell for the rest of the commands commands
SHELL ["/usr/bin/fish", "--login", "-c"]

# fisher (fish shell)
RUN curl -sL https://git.io/fisher | source && fisher install jorgebucaran/fisher
RUN fisher install patrickf1/fzf.fish

# python packages
RUN pip install bpython

# copy nix installation script
COPY scripts/setup/nix.sh .
COPY scripts/setup/nix_pkgs.sh .
USER root
RUN chown ${USER}:${USER} nix.sh nix_pkgs.sh
USER ${USER}

# after starting container, use nix for installing
# - neovim
# - lazygit

# start fish shell
# ENTRYPOINT ["fish"]

# ------------------

# rustforembedded specific packages

USER root
RUN apt-get install -y \
  gcc-arm-none-eabi \
  bear
USER ${USER}
